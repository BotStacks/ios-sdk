//
// NotificationSettings.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NotificationSettings: Codable, JSONEncodable, Hashable {

    public enum AllowFrom: String, Codable, CaseIterable {
        case all = "all"
        case mentions = "mentions"
        case _none = "none"
    }
    static let validTillDisplayValueRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]{1,3} (Day|Week|Month|Year)[s]{0,1}$/")
    /** Allow from values. It can be all/mentions/none. When it is include in thread response, can have value just for requesting used. */
    public var allowFrom: AllowFrom
    /** When setting should reset */
    public var validTill: String?
    /** To help frontend preselect value */
    public var validTillDisplayValue: String?

    public init(allowFrom: AllowFrom, validTill: String? = nil, validTillDisplayValue: String? = nil) {
        self.allowFrom = allowFrom
        self.validTill = validTill
        self.validTillDisplayValue = validTillDisplayValue
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case allowFrom
        case validTill
        case validTillDisplayValue
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(allowFrom, forKey: .allowFrom)
        try container.encodeIfPresent(validTill, forKey: .validTill)
        try container.encodeIfPresent(validTillDisplayValue, forKey: .validTillDisplayValue)
    }
}


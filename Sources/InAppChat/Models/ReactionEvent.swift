//
// ReactionEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReactionEvent: Codable, JSONEncodable, Hashable {

    /** User unique Identifier */
    public var eRTCUserId: String
    /** Chat unique Identifier */
    public var msgUniqueId: String
    /** Emoje code string */
    public var emojiCode: String
    /** Reaction actionType. It can be set/clear */
    public var action: String
    /** Total count of particular reaction with emojiCode */
    public var totalCount: Double

    public init(eRTCUserId: String, msgUniqueId: String, emojiCode: String, action: String, totalCount: Double) {
        self.eRTCUserId = eRTCUserId
        self.msgUniqueId = msgUniqueId
        self.emojiCode = emojiCode
        self.action = action
        self.totalCount = totalCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case eRTCUserId
        case msgUniqueId
        case emojiCode
        case action
        case totalCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(eRTCUserId, forKey: .eRTCUserId)
        try container.encode(msgUniqueId, forKey: .msgUniqueId)
        try container.encode(emojiCode, forKey: .emojiCode)
        try container.encode(action, forKey: .action)
        try container.encode(totalCount, forKey: .totalCount)
    }
}


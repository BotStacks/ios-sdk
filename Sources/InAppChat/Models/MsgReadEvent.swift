//
// MsgReadEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A user updating a message read state */
public struct MsgReadEvent: Codable, JSONEncodable, Hashable {

    public enum MsgReadStatus: String, Codable, CaseIterable {
        case delivered = "delivered"
        case seen = "seen"
    }
    /** The ID of the message */
    public var msgUniqueId: String
    /** The ID of the user marking the message read */
    public var eRTCUserId: String
    /** The status of the message */
    public var msgReadStatus: MsgReadStatus

    public init(msgUniqueId: String, eRTCUserId: String, msgReadStatus: MsgReadStatus) {
        self.msgUniqueId = msgUniqueId
        self.eRTCUserId = eRTCUserId
        self.msgReadStatus = msgReadStatus
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case msgUniqueId
        case eRTCUserId
        case msgReadStatus
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(msgUniqueId, forKey: .msgUniqueId)
        try container.encode(eRTCUserId, forKey: .eRTCUserId)
        try container.encode(msgReadStatus, forKey: .msgReadStatus)
    }
}


//
// APIUser.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct APIUser: Codable, JSONEncodable, Hashable {

    /** Unique ID of the user */
    public var eRTCUserId: String
    /** Email address */
    public var appUserId: String
    /** Name of user */
    public var name: String?
    /** User Profile Picture. Prepond base userServer URL to generate complete path. eg. http://global.ripbullertc.com/v1/ */
    public var profilePic: String?
    /** User Profile Picture Thumb Image */
    public var profilePicThumb: String?
    /** User Profile Status */
    public var profileStatus: String?
    /** User phone number */
    public var phoneNumber: String?
    /** Epoch Time Stamp of last Login */
    public var loginTimeStamp: Int?
    public var availabilityStatus: AvailabilityStatus?

    public init(eRTCUserId: String, appUserId: String, name: String? = nil, profilePic: String? = nil, profilePicThumb: String? = nil, profileStatus: String? = nil, phoneNumber: String? = nil, loginTimeStamp: Int? = nil, availabilityStatus: AvailabilityStatus? = nil) {
        self.eRTCUserId = eRTCUserId
        self.appUserId = appUserId
        self.name = name
        self.profilePic = profilePic
        self.profilePicThumb = profilePicThumb
        self.profileStatus = profileStatus
        self.phoneNumber = phoneNumber
        self.loginTimeStamp = loginTimeStamp
        self.availabilityStatus = availabilityStatus
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case eRTCUserId
        case appUserId
        case name
        case profilePic
        case profilePicThumb
        case profileStatus
        case phoneNumber
        case loginTimeStamp
        case availabilityStatus
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(eRTCUserId, forKey: .eRTCUserId)
        try container.encode(appUserId, forKey: .appUserId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(profilePic, forKey: .profilePic)
        try container.encodeIfPresent(profilePicThumb, forKey: .profilePicThumb)
        try container.encodeIfPresent(profileStatus, forKey: .profileStatus)
        try container.encodeIfPresent(phoneNumber, forKey: .phoneNumber)
        try container.encodeIfPresent(loginTimeStamp, forKey: .loginTimeStamp)
        try container.encodeIfPresent(availabilityStatus, forKey: .availabilityStatus)
    }
}


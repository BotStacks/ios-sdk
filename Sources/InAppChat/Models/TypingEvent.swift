//
// TypingEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A user&#39;s typing status change in a chat */
public struct TypingEvent: Codable, JSONEncodable, Hashable {

    public enum TypingStatusEvent: String, Codable, CaseIterable {
        case on = "on"
        case off = "off"
    }
    /** The user receiving the typing status */
    public var appUserId: String?
    /** The user sending the typing status */
    public var eRTCUserId: String
    /** The group receiving the typing status */
    public var groupId: String?
    /** Whether or not the user is typing */
    public var typingStatusEvent: TypingStatusEvent

    public init(appUserId: String? = nil, eRTCUserId: String, groupId: String? = nil, typingStatusEvent: TypingStatusEvent) {
        self.appUserId = appUserId
        self.eRTCUserId = eRTCUserId
        self.groupId = groupId
        self.typingStatusEvent = typingStatusEvent
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case appUserId
        case eRTCUserId
        case groupId
        case typingStatusEvent
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(appUserId, forKey: .appUserId)
        try container.encode(eRTCUserId, forKey: .eRTCUserId)
        try container.encodeIfPresent(groupId, forKey: .groupId)
        try container.encode(typingStatusEvent, forKey: .typingStatusEvent)
    }
}


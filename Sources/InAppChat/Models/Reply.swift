//
// Reply.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Reply thread feature details in received chat */
public struct Reply: Codable, JSONEncodable, Hashable {

    /** msgUniqueId of base chat */
    public var baseMsgUniqueId: String?
    /** Reply config which applies to reply chat. For example, bit 0 is used to decide whether to show reply on window or not. */
    public var replyMsgConfig: Double?

    public init(baseMsgUniqueId: String? = nil, replyMsgConfig: Double? = nil) {
        self.baseMsgUniqueId = baseMsgUniqueId
        self.replyMsgConfig = replyMsgConfig
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case baseMsgUniqueId
        case replyMsgConfig
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(baseMsgUniqueId, forKey: .baseMsgUniqueId)
        try container.encodeIfPresent(replyMsgConfig, forKey: .replyMsgConfig)
    }
}


//
// SenderKeyDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Sender key details used for this chat. */
public struct SenderKeyDetails: Codable, JSONEncodable, Hashable {

    /** Key identifier. This is optional. If it is not provided, means this publice key needs to be registerd. */
    public var keyId: String
    /** Device identifier. */
    public var deviceId: String
    /** public Key of associated device */
    public var publicKey: String

    public init(keyId: String, deviceId: String, publicKey: String) {
        self.keyId = keyId
        self.deviceId = deviceId
        self.publicKey = publicKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case keyId
        case deviceId
        case publicKey
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(keyId, forKey: .keyId)
        try container.encode(deviceId, forKey: .deviceId)
        try container.encode(publicKey, forKey: .publicKey)
    }
}


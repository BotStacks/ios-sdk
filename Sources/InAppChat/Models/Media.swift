//
// Media.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Media: Codable, JSONEncodable, Hashable {

    /** media URL. use chatServer URL as prefix to generate complete URL */
    public var path: String?
    /** media thumbnail URL. It can be present for only media with msgType as 'image'. use chatServer URL as prefix to generate complete URL */
    public var thumbnail: String?
    /** original name of file uploaded */
    public var name: String?

    public init(path: String? = nil, thumbnail: String? = nil, name: String? = nil) {
        self.path = path
        self.thumbnail = thumbnail
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case path
        case thumbnail
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(thumbnail, forKey: .thumbnail)
        try container.encodeIfPresent(name, forKey: .name)
    }
}


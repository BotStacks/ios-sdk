//
// ChannelQuery.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ChannelQuery: Codable, JSONEncodable, Hashable {

    public enum GroupType: String, Codable, CaseIterable {
        case _public = "public"
        case _private = "private"
    }
    /** Get groups user have joined */
    public var joined: Bool?
    /** Public or private group */
    public var groupType: GroupType?

    public init(joined: Bool? = nil, groupType: GroupType? = nil) {
        self.joined = joined
        self.groupType = groupType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case joined
        case groupType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(joined, forKey: .joined)
        try container.encodeIfPresent(groupType, forKey: .groupType)
    }
}


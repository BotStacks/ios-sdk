//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**
     * enum for parameter direction
     */
    public enum Direction_getUserMessages: String, CaseIterable {
        case future = "future"
        case past = "past"
    }

    /**

     - parameter uid: (path) the user&#39;s id 
     - parameter skip: (query) skip value for pagination. i.e. index. default 0 (optional, default to 0)
     - parameter limit: (query) limit value for pagination. i.e. page-size. default 10 (optional, default to 20)
     - parameter msgType: (query) Filters message by (optional)
     - parameter direction: (query) future/past (optional, default to .past)
     - returns: [APIMessage]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getUserMessages(uid: String, skip: Int? = nil, limit: Int? = nil, msgType: MessageType? = nil, direction: Direction_getUserMessages? = nil) async throws -> [APIMessage] {
        return try await getUserMessagesWithRequestBuilder(uid: uid, skip: skip, limit: limit, msgType: msgType, direction: direction).execute().body
    }

    /**
     - GET /user/{uid}/messages
     - API Key:
       - type: apiKey X-Device-ID (HEADER)
       - name: DeviceId
     - API Key:
       - type: apiKey X-API-Key (HEADER)
       - name: ApiKeyAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter uid: (path) the user&#39;s id 
     - parameter skip: (query) skip value for pagination. i.e. index. default 0 (optional, default to 0)
     - parameter limit: (query) limit value for pagination. i.e. page-size. default 10 (optional, default to 20)
     - parameter msgType: (query) Filters message by (optional)
     - parameter direction: (query) future/past (optional, default to .past)
     - returns: RequestBuilder<[APIMessage]> 
     */
    open class func getUserMessagesWithRequestBuilder(uid: String, skip: Int? = nil, limit: Int? = nil, msgType: MessageType? = nil, direction: Direction_getUserMessages? = nil) -> RequestBuilder<[APIMessage]> {
        var localVariablePath = "/user/{uid}/messages"
        let uidPreEscape = "\(APIHelper.mapValueToPathItem(uid))"
        let uidPostEscape = uidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{uid}", with: uidPostEscape, options: .literal, range: nil)
        let localVariableURLString = InAppChatAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "skip": (wrappedValue: skip?.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "msgType": (wrappedValue: msgType?.encodeToJSON(), isExplode: true),
            "direction": (wrappedValue: direction?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[APIMessage]>.Type = InAppChatAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - returns: Stub
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func stub() async throws -> Stub {
        return try await stubWithRequestBuilder().execute().body
    }

    /**
     - GET /stub
     - This api does not exist. This is only to generate types that wouldnt have otherwise been generated
     - API Key:
       - type: apiKey X-Device-ID (HEADER)
       - name: DeviceId
     - API Key:
       - type: apiKey X-API-Key (HEADER)
       - name: ApiKeyAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - returns: RequestBuilder<Stub> 
     */
    open class func stubWithRequestBuilder() -> RequestBuilder<Stub> {
        let localVariablePath = "/stub"
        let localVariableURLString = InAppChatAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Stub>.Type = InAppChatAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}

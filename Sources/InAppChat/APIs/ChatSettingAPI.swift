//
// ChatSettingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ChatSettingAPI {

    /**
     Get chat settings that contains profanity and domain filters
     
     - returns: ChatSettings
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getSettings() async throws -> ChatSettings {
        return try await getSettingsWithRequestBuilder().execute().body
    }

    /**
     Get chat settings that contains profanity and domain filters
     - GET /settings
     - Get profanity and domain filter.
     - API Key:
       - type: apiKey X-Device-ID (HEADER)
       - name: DeviceId
     - API Key:
       - type: apiKey X-API-Key (HEADER)
       - name: ApiKeyAuth
     - BASIC:
       - type: http
       - name: BearerAuth
     - returns: RequestBuilder<ChatSettings> 
     */
    open class func getSettingsWithRequestBuilder() -> RequestBuilder<ChatSettings> {
        let localVariablePath = "/settings"
        let localVariableURLString = InAppChatAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ChatSettings>.Type = InAppChatAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
